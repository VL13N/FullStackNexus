name: Continuous Integration

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas scikit-learn tensorflow xgboost python-dotenv supabase
        
    - name: Run linting
      run: npm run lint
      
    - name: Run TypeScript checks
      run: npm run type-check
      
    - name: Run unit tests
      run: npm test
      
    - name: Run test coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  healthcheck:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas scikit-learn tensorflow xgboost python-dotenv supabase
        
    - name: Start application
      run: |
        npm run build
        timeout 30 npm start &
        sleep 15
        
    - name: Run health check tests
      run: npm run healthcheck
      
    - name: Run endpoint validation
      run: node test_endpoints.js
      
  integration:
    runs-on: ubuntu-latest
    needs: [test, healthcheck]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas scikit-learn tensorflow xgboost python-dotenv supabase
        
    - name: Run integration tests
      run: |
        npm run test:integration
        
    - name: Test ML pipeline
      run: node test_lstm_pipeline.js
      
    - name: Test correlation analysis
      run: node test_correlation_analysis.js
      
    - name: Test alerts system
      run: node test_alerts_system.js
      
    - name: Test backtesting framework
      run: node test_backtest_framework.js
      
    - name: Test HPO system
      run: node test_optuna_hpo.js

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: npm audit fix --dry-run
      
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified