You are the Replit AI agent for the FullStackNexus project.  Using only the CryptoRank V2 Basic‐plan endpoints listed below, integrate them into the Solana dashboard and feature pipeline:

/v2/global
/v2/currencies/map
/v2/currencies/categories
/v2/currencies/tags
/v2/currencies/fiat
/v2/currencies
/v2/currencies/:id
/v2/currencies/:id/full-metadata
/v2/currencies/:id/sparkline?interval=24h
/v2/currencies/search?q=<query>
/v2/funds/map
/v2/exchanges/map

markdown
Copy

1. **Backend Routes**  
   - Create Express routes under `/api/cryptorank` for each endpoint, proxying requests to CryptoRank with `?api_key=${process.env.CRYPTORANK_API_KEY}`.  
     ```js
     // Example: server/routes/cryptorank.js
     router.get('/global', async (req, res) => {
       const data = await makeV2Request('global');
       res.json({ success: true, data: data.data });
     });
     ```

2. **Service Functions**  
   - In `services/cryptoRankService.js`, implement functions for each:  
     ```js
     export const fetchGlobalStats    = () => makeV2Request('global');
     export const fetchMap            = () => makeV2Request('currencies/map');
     export const fetchCategories     = () => makeV2Request('currencies/categories');
     // …and so on…
     ```
   - Use an LRU cache (1 hr) and exponential‐backoff retry.

3. **Feature Pipeline**  
   - In your Solana feature‐vector generator, pull in:
     - `btcDominance` from `/v2/global`  
     - `fiatRates` from `/v2/currencies/fiat`  
     - `categoryTags` from `/v2/currencies/tags` (encode popular tags as features)  

4. **UI Components**  
   - **GlobalStatsCard**: show total market cap, 24 h volume, BTC dominance.  
   - **CategoryHeatmap**: consume `/api/cryptorank/categories` + your composite scores to display average pillar scores per category.  
   - **TagCloud**: fetch `/api/cryptorank/tags` and render clickable tags to filter your watchlist.  
   - **CurrencySearch**: implement autosuggest using `/api/cryptorank/search?q=`.  
   - **FundamentalCard**: for SOL `/api/cryptorank/currencies/solana`, show price, market cap, volume, supply, rank, and a 24 h sparkline from `/sparkline`.

5. **Deployment & Testing**  
   - Restart your server (`npm run dev`).  
   - Run smoke tests:
     ```
     curl http://localhost:5000/api/cryptorank/global
     curl http://localhost:5000/api/cryptorank/currencies/solana
     curl http://localhost:5000/api/cryptorank/currencies/solana/sparkline?interval=24h
     ```  
     Each should return **200 OK** and valid JSON.

Commit these changes with message “feat: integrate full CryptoRank v2 Basic-plan endpoints” and push to `origin main`.  






