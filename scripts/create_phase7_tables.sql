-- Phase 7 OpenAI Integration Database Tables
-- Create necessary tables for news scoring, daily updates, and dynamic weights

-- Table for storing LunarCrush news scores from OpenAI
CREATE TABLE IF NOT EXISTS news_scores (
    id SERIAL PRIMARY KEY,
    timestamp TIMESTAMP NOT NULL DEFAULT NOW(),
    headline TEXT NOT NULL,
    score FLOAT NOT NULL CHECK (score >= -100 AND score <= 100),
    justification TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Index for efficient querying by timestamp
CREATE INDEX IF NOT EXISTS idx_news_scores_timestamp ON news_scores(timestamp);
CREATE INDEX IF NOT EXISTS idx_news_scores_created_at ON news_scores(created_at);

-- Table for storing daily market updates generated by OpenAI
CREATE TABLE IF NOT EXISTS daily_updates (
    id SERIAL PRIMARY KEY,
    date DATE NOT NULL UNIQUE,
    content TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Index for efficient querying by date
CREATE INDEX IF NOT EXISTS idx_daily_updates_date ON daily_updates(date);

-- Table for storing dynamic pillar weights suggested by OpenAI
CREATE TABLE IF NOT EXISTS dynamic_weights (
    id SERIAL PRIMARY KEY,
    date DATE NOT NULL UNIQUE,
    technical FLOAT NOT NULL CHECK (technical >= 0 AND technical <= 100),
    social FLOAT NOT NULL CHECK (social >= 0 AND social <= 100),
    fundamental FLOAT NOT NULL CHECK (fundamental >= 0 AND fundamental <= 100),
    astrology FLOAT NOT NULL CHECK (astrology >= 0 AND astrology <= 100),
    justification JSONB NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
    CONSTRAINT weights_sum_check CHECK (
        ABS((technical + social + fundamental + astrology) - 100.0) < 1.0
    )
);

-- Index for efficient querying by date
CREATE INDEX IF NOT EXISTS idx_dynamic_weights_date ON dynamic_weights(date);

-- Add comments for documentation
COMMENT ON TABLE news_scores IS 'Stores LunarCrush news headlines scored by OpenAI from -100 (bearish) to +100 (bullish)';
COMMENT ON TABLE daily_updates IS 'Stores daily market updates generated by OpenAI based on news sentiment and prediction data';
COMMENT ON TABLE dynamic_weights IS 'Stores AI-suggested pillar weights that sum to 100% for Technical, Social, Fundamental, and Astrology pillars';

COMMENT ON COLUMN news_scores.score IS 'Score from -100 (extremely bearish) to +100 (extremely bullish)';
COMMENT ON COLUMN dynamic_weights.justification IS 'JSON object containing justification for each pillar weight';
COMMENT ON CONSTRAINT weights_sum_check ON dynamic_weights IS 'Ensures all four pillar weights sum to approximately 100%';